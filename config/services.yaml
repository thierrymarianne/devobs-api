imports:
    - { resource: services/api.yml }
    - { resource: services/curation.yml }
    - { resource: services/console.yml }
    - { resource: services/controller.yml }
    - { resource: services/mapping.yml }
    - { resource: services/membership.yml }
    - { resource: services/member_subscribee.yml }
    - { resource: services/member_subscription.yml }
    - { resource: services/news_review.yml }
    - { resource: services/operation.yml }
    - { resource: services/repository.yml }
    - { resource: services/persistence.yml }
    - { resource: services/security.yml }
    - { resource: services/worker.yml }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #    App\:
    #        resource: '../src/*'
    #        exclude: '../src/{Controler,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Twitter/Infrastructure/PublishersList/Controller/.*.php'
        tags: ['controller.service_arguments']

    App\Twitter\Infrastructure\Log\StatusLogger:
        class: 'App\Twitter\Infrastructure\Log\StatusLogger'
        arguments:
            - '@App\Twitter\Infrastructure\Translation\Translator'
            - '@monolog.logger.twitter_api'

    App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter:
        public: true
        class: 'App\Twitter\Infrastructure\Publication\Formatter\PublicationFormatter'
        calls:
            - [ 'setStatusAccessor',   [ '@App\Twitter\Infrastructure\Api\Accessor\StatusAccessor' ] ]
            - [ 'setStatusRepository', [ '@App\Twitter\Infrastructure\Api\Repository\StatusRepository' ] ]

    App\Twitter\Infrastructure\Api\Repository\StatusRepository:
        class:  'App\Twitter\Infrastructure\Api\Repository\StatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - '%weaving_the_web_twitter.entity.status.class%'
        calls:
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setStatusPersistence',      [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            appLogger:                '@logger'
            archivedStatusRepository: '@App\Twitter\Infrastructure\Api\Repository\ArchivedStatusRepository'
            connection:               '@doctrine.dbal.default_connection'
            registry:                 '@doctrine'
        tags:
            - { name: 'doctrine.repository_service' }

    App\Twitter\Domain\Publication\Repository\StatusRepositoryInterface: '@App\Twitter\Infrastructure\Api\Repository\StatusRepository'

    App\Twitter\Infrastructure\Api\Repository\ArchivedStatusRepository:
        class:  'App\Twitter\Infrastructure\Api\Repository\ArchivedStatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - '%weaving_the_web_twitter.entity.archived_status.class%'
        calls:
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setStatusPersistence',      [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            appLogger:              '@logger'
            connection:             '@doctrine.dbal.default_connection'
            registry:               '@doctrine'

    weaving_the_web_twitter.repository.read.status:
        class:  'App\Twitter\Infrastructure\Api\Repository\StatusRepository'
        arguments:
            - '@Doctrine\Common\Persistence\ManagerRegistry'
            - '%weaving_the_web_twitter.entity.status.class%'
        calls:
            - [ 'setOauthTokens',            [ [ '%weaving_the_web_twitter.oauth_token.default%' ] ] ]
            - [ 'setMemberRepository',       [ '@user_manager' ] ]
            - [ 'setPublicationRepository',  [ '@App\Twitter\Infrastructure\Publication\Repository\PublicationRepository' ] ]
            - [ 'setStatusLogger',           [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setTaggedStatusRepository', [ '@App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository' ] ]
            - [ 'setTimelyStatusRepository', [ '@repository.timely_status' ] ]
        properties:
            registry:               '@doctrine'
            statusLogger:           '@monolog.logger.twitter_api'
            connection:             '@doctrine.dbal.default_connection'

    App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor:
        class: 'App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor'
        arguments:
            - '@messenger.default_bus'
            - '@App\Twitter\Infrastructure\Api\Accessor\MemberProfileAccessor'
            - '@App\Twitter\Infrastructure\Api\Repository\PublishersListRepository'
            - '@logger'

    App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor:
        class: 'App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor'
        calls:
            - [ 'setMemberIdentityProcessor',                 [ '@App\Twitter\Infrastructure\Amqp\ResourceProcessor\MemberIdentityProcessor'] ]
            - [ 'setMemberProfileCollectedEventRepository',   [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository'] ]
            - [ 'setPublishersListCollectedEventRepository', [ '@App\Twitter\Infrastructure\Curation\Repository\PublishersListCollectedEventRepository'] ]
            - [ 'setTokenChange',                             [ '@App\Twitter\Infrastructure\Api\AccessToken\TokenChange'] ]
        arguments:
            - '@App\Twitter\Infrastructure\Api\Accessor'
            - '@App\Twitter\Infrastructure\Translation\Translator'
            - '@logger'

    App\Twitter\Infrastructure\Amqp\MessageBus\PublicationMessageDispatcher:
        class: 'App\Twitter\Infrastructure\Amqp\MessageBus\PublicationMessageDispatcher'
        arguments:
            - '@App\Twitter\Infrastructure\Api\Accessor'
            - '@App\Twitter\Infrastructure\Amqp\ResourceProcessor\PublishersListProcessor'
            - '@App\Twitter\Infrastructure\Api\AccessToken\TokenChange'
            - '@logger'
            - '@App\Twitter\Infrastructure\Translation\Translator'
        calls:
            - [ 'setModerator',                              [ '@App\Twitter\Infrastructure\Api\Moderator\ApiLimitModerator' ] ]
            - [ 'setOwnershipAccessor',                      [ '@App\Twitter\Domain\Api\Accessor\OwnershipAccessorInterface' ] ]
            - [ 'setOwnershipBatchCollectedEventRepository', [ '@App\Twitter\Infrastructure\Curation\Repository\OwnershipBatchCollectedEventRepository' ] ]

    App\Twitter\Infrastructure\Api\UnavailableResourceHandler:
        class: 'App\Twitter\Infrastructure\Api\UnavailableResourceHandler'
        arguments:
            - '@user_manager'
            - '@logger'

    App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository:
        class: 'App\Twitter\Infrastructure\Repository\Status\TaggedStatusRepository'
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@logger'
        calls:
            - [ 'setStatusRepository', [ '@App\Twitter\Domain\Publication\Repository\StatusRepositoryInterface' ] ]

    App\Twitter\Infrastructure\Api\Accessor:
        class: 'App\Twitter\Infrastructure\Api\Accessor'
        arguments:
            - '%twitter_api.consumer_key%'
            - '%twitter_api.consumer_secret%'
            - '%weaving_the_web_twitter.oauth_token.default%'
            - '%weaving_the_web_twitter.oauth_secret.default%'
            - '@App\Twitter\Domain\Api\AccessToken\Repository\TokenRepositoryInterface'
            - '@monolog.logger.twitter_api'
        properties:
            environment:          '%kernel.environment%'
            twitterApiLogger:     '@monolog.logger.twitter_api'
            statusAccessor:       '@App\Twitter\Infrastructure\Api\Accessor\StatusAccessor'
        calls:
            - [ 'setClientClass', [ '\Goutte\Client' ] ]
            - [ 'setConsumerKey', [ '%twitter_api.consumer_key%' ] ]
            - [ 'setConsumerSecret', [ '%twitter_api.consumer_secret%' ] ]
            - [ 'setMemberRepository', [ '@user_manager' ] ]
            - [ 'setModerator', [ '@App\Twitter\Infrastructure\Api\Moderator\ApiLimitModerator' ] ]
            - [ 'setTranslator', [ '@App\Twitter\Infrastructure\Translation\Translator' ] ]
            - [ 'setAccessToken', [ '%weaving_the_web_twitter.oauth_token.default%' ] ]
            - [ 'setAccessTokenSecret', [ '%weaving_the_web_twitter.oauth_secret.default%' ] ]

    App\Twitter\Domain\Api\Accessor\ApiAccessorInterface:
        '@App\Twitter\Infrastructure\Api\Accessor'

    App\Twitter\Infrastructure\Api\Accessor\StatusAccessor:
        class: 'App\Twitter\Infrastructure\Api\Accessor\StatusAccessor'
        properties:
            archivedStatusRepository:   '@App\Twitter\Infrastructure\Api\Repository\ArchivedStatusRepository'
            entityManager:              '@doctrine.orm.entity_manager'
            notFoundStatusRepository:   '@repository.not_found_status'
        calls:
            - [ 'setApiAccessor',                               [ '@App\Twitter\Infrastructure\Api\Accessor' ] ]
            - [ 'setLogger',                                    [ '@logger' ] ]
            - [ 'setMemberRepository',                          [ '@App\Twitter\Infrastructure\Membership\Repository\MemberRepository' ] ]
            - [ 'setMemberProfileCollectedEventRepository',     [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository' ] ]
            - [ 'setPublicationPersistence',                    [ '@App\Twitter\Infrastructure\Publication\Persistence\PublicationPersistence' ] ]
            - [ 'setStatusRepository',                          [ '@App\Twitter\Infrastructure\Api\Repository\StatusRepository' ] ]
            - [ 'setPublicationBatchCollectedEventRepository',  [ '@App\Twitter\Infrastructure\Curation\Repository\PublicationBatchCollectedEventRepository' ] ]
        public: true

    App\Twitter\Domain\Api\Accessor\StatusAccessorInterface:
        '@App\Twitter\Infrastructure\Api\Accessor\StatusAccessor'

    app.cache.redis:
        class: '%redis_cache.class%'
        arguments:
            - "%redis_host%"
            - "%redis_port%"

    App\Twitter\Infrastructure\Cache\RedisCache: '@app.cache.redis'

    app.authenticator:
        class: 'App\Membership\Infrastructure\Security\Authentication\Authenticator'
        properties:
            authenticationTokenRepository:  '@repository.authentication_token'
            authorizedIss:                  '%authorized_iss%'
            validAudience:                  '%valid_audience%'

    app.event_subscriber.console:
        class: 'App\Twitter\Infrastructure\Console\EventSubscriber\ConsoleEventsSubscriber'
        properties:
            logger: '@logger'
        tags:
            - { name: 'kernel.event_subscriber' }

    App\Twitter\Infrastructure\Api\Moderator\ApiLimitModerator:
        class:  'App\Twitter\Infrastructure\Api\Moderator\ApiLimitModerator'
        arguments:
            - '@?logger'

    App\Twitter\Infrastructure\Collector\PublicationCollector:
        class:  'App\Twitter\Infrastructure\Collector\PublicationCollector'
        calls:
            - [ 'setApiAccessor',                               [ '@App\Twitter\Infrastructure\Api\Accessor' ] ]
            - [ 'setInterruptibleCollectDeciderInterface',      [ '@App\Twitter\Infrastructure\Collector\InterruptibleCollectDecider' ] ]
            - [ 'setLogger',                                    [ '@monolog.logger.twitter_api' ] ]
            - [ 'setMemberProfileCollectedEventRepository',     [ '@App\Twitter\Infrastructure\Curation\Repository\MemberProfileCollectedEventRepository' ] ]
            - [ 'setMemberRepository',                          [ '@App\Twitter\Infrastructure\Membership\Repository\MemberRepository' ] ]
            - [ 'setModerator',                                 [ '@App\Twitter\Infrastructure\Api\Moderator\ApiLimitModerator' ] ]
            - [ 'setPublicationBatchCollectedEventRepository',  [ '@App\Twitter\Infrastructure\Curation\Repository\PublicationBatchCollectedEventRepository' ] ]
            - [ 'setPublishersListRepository',                  [ '@App\Twitter\Infrastructure\Api\Repository\PublishersListRepository' ] ]
            - [ 'setPublicationPersistence',                    [ '@App\Twitter\Infrastructure\Publication\Persistence\PublicationPersistence' ] ]
            - [ 'setStatusLogger',                              [ '@App\Twitter\Infrastructure\Log\StatusLogger' ] ]
            - [ 'setStatusAccessor',                            [ '@App\Twitter\Infrastructure\Api\Accessor\StatusAccessor' ] ]
            - [ 'setStatusRepository',                          [ '@App\Twitter\Infrastructure\Api\Repository\StatusRepository' ] ]
            - [ 'setStatusPersistence',                         [ '@App\Twitter\Infrastructure\Publication\Persistence\StatusPersistence' ] ]
            - [ 'setTokenRepository',                           [ '@App\Twitter\Domain\Api\AccessToken\Repository\TokenRepositoryInterface' ] ]
            - [ 'setTranslator',                                [ '@App\Twitter\Infrastructure\Translation\Translator' ] ]
            - [ 'setWhispererIdentification',                   [ '@App\Twitter\Infrastructure\Identification\WhispererIdentification' ] ]
            - [ 'setWhispererRepository',                       [ '@repository.whisperer' ] ]
        properties:
            twitterApiLogger:       '@monolog.logger.twitter_api'

    App\Twitter\Infrastructure\Translation\Translator:
        class: 'App\Twitter\Infrastructure\Translation\Translator'
        arguments:
            - '@translator'
            - '@logger'

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    monolog_channels:
        - 'twitter_api'
        - 'development'
        - 'membership'

    redis_cache.class:                                                  'App\Twitter\Infrastructure\Cache\RedisCache'

    weaving_the_web_twitter.api_host:                             'api.twitter.com'

    weaving_the_web_twitter.authenticate_application.class:       'App\Twitter\Infrastructure\Console\AuthenticateApplicationCommand'
    weaving_the_web_twitter.authentication_uri:                   '/oauth2/token'

    twitter_api.consumer_key:                                     '%env(resolve:API_TWITTER_CONSUMER_KEY)%'
    twitter_api.consumer_secret:                                  '%env(resolve:API_TWITTER_CONSUMER_SECRET)%'

    weaving_the_web_twitter.oauth_token.default:                  '%env(resolve:API_TWITTER_USER_TOKEN)%'
    weaving_the_web_twitter.oauth_secret.default:                 '%env(resolve:API_TWITTER_USER_SECRET)%'

    weaving_the_web_twitter.entity.archived_status.class:         'App\Twitter\Infrastructure\Api\Entity\ArchivedStatus'
    weaving_the_web_twitter.entity.status.class:                  '%weaving_the_web_api.entity.status.class%'

    repository.publishers_list.class:                            '%weaving_the_web_api.repository.publishers_list.class%'

    weaving_the_web_twitter.version:                              '%env(resolve:API_TWITTER_VERSION)%'

    allowed.origin:                                               '%env(resolve:ALLOWED_ORIGIN)%'

    publishers_list_default:                                      '%env(resolve:PUBLISHERS_LIST_DEFAULT)%'

    admin_route_name:                                             '%env(resolve:ADMIN_ROUTE_NAME)%'

    redis_host:                                                   '%env(resolve:REDIS_HOST)%'
    redis_port:                                                   '%env(resolve:REDIS_PORT)%'

    valid_audience:                                               '%env(resolve:VALID_AUDIENCE)%'

    authorized_iss:                                               '%env(resolve:AUTHORIZED_ISS)%'
